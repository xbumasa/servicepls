version: "3.1"
services:
  spapi:
    build:
      context: ./api
      dockerfile: Dockerfile
      args:
        - API_PORT=$API_PORT
    image: spapii
    container_name: spapic
    restart: unless-stopped
    user: $USERID:$GROUPID
    env_file: .env
    environment:
      - MONGO_USERNAME=$MONGO_USERNAME
      - MONGO_PASSWORD=$MONGO_PASSWORD
      - MONGO_HOST=spdb
      - MONGO_PORT=$MONGO_PORT
      - MONGO_DB=$MONGO_DB
      - TOKEN_SECRET=$TOKEN_SECRET
      - CRYPT_TOKEN=$CRYPT_TOKEN
      - API_PORT=$API_PORT
    ports:
      - $API_PORT:$API_PORT
    volumes:
      - /etc/group:/etc/group:ro
      - /etc/passwd:/etc/passwd:ro
      - /etc/shadow:/etc/shadow:ro
    networks:
      - spdbnetwork
      - spappnetwork
    command: scripts/wait-for.sh spdb:$MONGO_PORT -- /usr/local/bin/pm2-runtime /var/node/spapi/index.js

  spapp:
    build:
      context: ./app
      dockerfile: Dockerfile
      args:
        - NUXT_PORT=$NUXT_PORT
    image: spappi
    container_name: spappc
    restart: unless-stopped
    user: $USERID:$GROUPID
    env_file: .env
    environment:
      - NUXT_HOST=$NUXT_HOST
      - NUXT_PORT=$NUXT_PORT
    ports:
      - $NUXT_PORT:$NUXT_PORT
    volumes:
      - /etc/group:/etc/group:ro
      - /etc/passwd:/etc/passwd:ro
      - /etc/shadow:/etc/shadow:ro
    networks:
      - spappnetwork
    command: npm run start

  spdb:
    image: mongo:4.0.20-xenial
    container_name: spdbc
    restart: unless-stopped
    env_file: .env
    environment:
      - MONGO_INITDB_ROOT_USERNAME=$MONGO_USERNAME
      - MONGO_INITDB_ROOT_PASSWORD=$MONGO_PASSWORD
    volumes:
      - dbdata:/data/db
    ports:
      - $MONGO_PORT:$MONGO_PORT
    networks:
      - spdbnetwork

  spnginx:
    image: nginx:latest
    container_name: spnginxc
    restart: unless-stopped
    volumes:
      - ./nginx:/etc/nginx/conf.d
    depends_on:
      - spapp
    ports:
      - "80:80"
    networks:
      - spappnetwork

networks:
  spdbnetwork:
    driver: bridge
  spappnetwork:
    driver: bridge

volumes:
  dbdata:
